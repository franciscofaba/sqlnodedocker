-- MySQL Script generated by MySQL Workbench
-- Tue Mar 26 12:36:31 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema BBD_CRM
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema BBD_CRM
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `BBD_CRM` DEFAULT CHARACTER SET utf8 ;
USE `BBD_CRM` ;

-- -----------------------------------------------------
-- Table `BBD_CRM`.`Carrera/postgrado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BBD_CRM`.`Carrera/postgrado` (
  `idCarrera` INT NOT NULL,
  `nombreCarrera` VARCHAR(45) NULL,
  `tipoDeGrado` VARCHAR(45) NULL,
  PRIMARY KEY (`idCarrera`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BBD_CRM`.`Curso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BBD_CRM`.`Curso` (
  `idCurso` INT NOT NULL,
  `idCarrera_fk` INT NOT NULL,
  `nombreCurso` VARCHAR(45) NULL,
  `nroDeSemestre` VARCHAR(45) NULL,
  PRIMARY KEY (`idCurso`, `idCarrera_fk`),
  INDEX `fk_Clase_Carrera/postgrado1_idx` (`idCarrera_fk` ASC) VISIBLE,
  CONSTRAINT `fk_Clase_Carrera/postgrado1`
    FOREIGN KEY (`idCarrera_fk`)
    REFERENCES `BBD_CRM`.`Carrera/postgrado` (`idCarrera`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BBD_CRM`.`Alumno`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BBD_CRM`.`Alumno` (
  `idAlumno` INT NOT NULL,
  `idCarrera_fk` INT NOT NULL,
  `nombreAlumno` VARCHAR(45) NULL,
  `mail` VARCHAR(45) NULL,
  PRIMARY KEY (`idAlumno`, `idCarrera_fk`),
  INDEX `fk_Alumno_Carrera/postgrado_idx` (`idCarrera_fk` ASC) VISIBLE,
  CONSTRAINT `fk_Alumno_Carrera/postgrado`
    FOREIGN KEY (`idCarrera_fk`)
    REFERENCES `BBD_CRM`.`Carrera/postgrado` (`idCarrera`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BBD_CRM`.`AlumnoClaseIntermedia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BBD_CRM`.`AlumnoClaseIntermedia` (
  `idAlumno_fk` INT NOT NULL,
  `idCurso_fk` INT NOT NULL,
  `idCarrera_fk` INT NOT NULL,
  `profesor` VARCHAR(45) NULL,
  `nombreCurso` VARCHAR(45) NULL,
  `idAlumnoClase` VARCHAR(45) NOT NULL,
  `estadoCurso` VARCHAR(45) NULL,
  PRIMARY KEY (`idAlumno_fk`, `idCurso_fk`, `idCarrera_fk`, `idAlumnoClase`),
  INDEX `fk_Alumno_has_Clase_Clase1_idx` (`idCurso_fk` ASC) VISIBLE,
  INDEX `fk_Alumno_has_Clase_Alumno1_idx` (`idAlumno_fk` ASC, `idCarrera_fk` ASC) VISIBLE,
  CONSTRAINT `fk_Alumno_has_Clase_Alumno1`
    FOREIGN KEY (`idAlumno_fk` , `idCarrera_fk`)
    REFERENCES `BBD_CRM`.`Alumno` (`idAlumno` , `idCarrera_fk`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Alumno_has_Clase_Clase1`
    FOREIGN KEY (`idCurso_fk`)
    REFERENCES `BBD_CRM`.`Curso` (`idCurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BBD_CRM`.`Asistencia`
-- -----------------------------------------------------

ALTER TABLE `BBD_CRM`.`AlumnoClaseIntermedia` ADD INDEX `idx_idAlumnoClase` (`idAlumnoClase`);

CREATE TABLE IF NOT EXISTS `BBD_CRM`.`Asistencia` (
  `idAsistencia` VARCHAR(45) NOT NULL,
  `fecha` date NOT NULL,
  `asistencia` VARCHAR(45) NULL,
  `justificacion` VARCHAR(45) NULL,
  `idAlumnoClase_fk` VARCHAR(45) NOT NULL,
  `idAlumno_fk` INT NOT NULL,
  PRIMARY KEY (`idAsistencia`),
  INDEX `fk_Asistencia_AlumnoClaseIntermedia1_idx` (`idAlumnoClase_fk` ASC) VISIBLE,
  INDEX `fk_Asistencia_Alumno1_idx` (`idAlumno_fk` ASC) VISIBLE,
  CONSTRAINT `fk_Asistencia_AlumnoClaseIntermedia1`
    FOREIGN KEY (`idAlumnoClase_fk`)
    REFERENCES `BBD_CRM`.`AlumnoClaseIntermedia` (`idAlumnoClase`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Asistencia_Alumno1`
    FOREIGN KEY (`idAlumno_fk`)
    REFERENCES `BBD_CRM`.`Alumno` (`idAlumno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BBD_CRM`.`Reglamento`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BBD_CRM`.`Reglamento` (
  `idCurso_fk` INT NOT NULL,
  `preguntas` VARCHAR(45) NULL,
  `respuestas` VARCHAR(45) NULL,
  PRIMARY KEY (`idCurso_fk`),
  CONSTRAINT `fk_Reglamento_Curso1`
    FOREIGN KEY (`idCurso_fk`)
    REFERENCES `BBD_CRM`.`Curso` (`idCurso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BBD_CRM`.`login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BBD_CRM`.`login` (
  `mail` VARCHAR(150) NOT NULL,
  `password` VARCHAR(45) NULL,
  `idAlumno_fk` INT NOT NULL,
  PRIMARY KEY (`mail`, `idAlumno_fk`),
  INDEX `fk_login_Alumno1_idx` (`idAlumno_fk` ASC) VISIBLE,
  CONSTRAINT `fk_login_Alumno1`
    FOREIGN KEY (`idAlumno_fk`)
    REFERENCES `BBD_CRM`.`Alumno` (`idAlumno`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `BBD_CRM` ;

-- -----------------------------------------------------
-- Placeholder table for view `BBD_CRM`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BBD_CRM`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `BBD_CRM`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `BBD_CRM`.`view1`;
USE `BBD_CRM`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;



-- Insertar datos en la tabla Carrera/postgrado
INSERT INTO `BBD_CRM`.`Carrera/postgrado` (`idCarrera`, `nombreCarrera`, `tipoDeGrado`) VALUES
(1, 'Ingeniería Informática', 'Licenciatura'),
(2, 'Administración de Empresas', 'Licenciatura');

-- Insertar datos en la tabla Curso
INSERT INTO `BBD_CRM`.`Curso` (`idCurso`, `idCarrera_fk`, `nombreCurso`, `nroDeSemestre`) VALUES
(101, 1, 'Programación Avanzada', 'Quinto Semestre'),
(102, 1, 'Bases de Datos', 'Cuarto Semestre'),
(103, 2, 'Contabilidad', 'Tercer Semestre');

-- Insertar datos en la tabla Alumno
INSERT INTO `BBD_CRM`.`Alumno` (`idAlumno`, `idCarrera_fk`, `nombreAlumno`, `mail`) VALUES
(1001, 1, 'Juan Pérez', 'juan@example.com'),
(1002, 1, 'María Gómez', 'maria@example.com'),
(1003, 2, 'Carlos López', 'carlos@example.com');

-- Insertar datos en la tabla AlumnoClaseIntermedia
INSERT INTO `BBD_CRM`.`AlumnoClaseIntermedia` (`idAlumno_fk`, `idCurso_fk`, `idCarrera_fk`, `profesor`, `nombreCurso`, `idAlumnoClase`, `estadoCurso`) VALUES
(1001, 101, 1, 'Profesor 1', 'Programación Avanzada', 'A101', 'Activo'),
(1002, 102, 1, 'Profesor 2', 'Bases de Datos', 'A102', 'Activo'),
(1003, 103, 2, 'Profesor 3', 'Contabilidad', 'A103', 'Activo');

-- Insertar datos en la tabla Asistencia
INSERT INTO `BBD_CRM`.`Asistencia` (`idAsistencia`,`fecha`,`asistencia`, `justificacion`, `idAlumnoClase_fk`, `idAlumno_fk`) VALUES
('1A','2024-03-27', 'Presente', NULL, 'A101', 1001),
('2A','2024-03-27', 'Ausente', 'Enfermedad', 'A102', 1002),
('3A','2024-03-27', 'Presente', NULL, 'A103', 1003);

-- Insertar datos en la tabla Reglamento
INSERT INTO `BBD_CRM`.`Reglamento` (`idCurso_fk`, `preguntas`, `respuestas`) VALUES
(101, 'Pregunta 1', 'Respuesta 1'),
(102, 'Pregunta 2', 'Respuesta 2'),
(103, 'Pregunta 3', 'Respuesta 3');

-- Insertar datos en la tabla login
INSERT INTO `BBD_CRM`.`login` (`mail`, `password`, `idAlumno_fk`) VALUES
('juan@example.com', 'contraseña123', 1001),
('maria@example.com', 'contraseña456', 1002),
('carlos@example.com', 'contraseña789', 1003);
